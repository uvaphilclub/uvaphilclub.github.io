{"version":3,"file":"component---src-pages-using-ssr-js-8ca093cd58fdd1824e4f.js","mappings":"6LA6BA,MA1Be,QAAC,UAAEA,GAAW,SAC3B,0BAAQC,MAAM,wCACZ,uBAAKA,MAAM,kCACP,uBAAKA,MAAM,oEACP,sBAAIA,MAAM,oCAAmC,wBAAMA,MAAM,aAAY,OAAU,oBAC/E,sBAAIA,MAAM,wBAAuB,SAErC,0BAAQC,GAAG,mBAAmBD,MAAQ,kEAAiE,MAI3G,2BACI,uBAAKA,MAAM,mBACP,sBAAIA,MAAM,QACN,sBAAIA,MAAM,0BACV,gBAAC,EAAAE,KAAI,CAACF,MAAM,mBAAmBG,GAAG,KAAI,QACtC,gBAAC,EAAAD,KAAI,CAACF,MAAM,mBAAmBG,GAAG,WAAU,UAC5C,gBAAC,EAAAD,KAAI,CAACF,MAAM,mBAAmBG,GAAG,YAAW,WAC7C,gBAAC,EAAAD,KAAI,CAACF,MAAM,mBAAmBG,GAAG,YAAW,eAKlD,ECwBX,MArCe,IAAmB,IAAD,MAAjB,SAAEC,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACP,WAAiC,QAAtB,EAAAM,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOT,GACP,0BACEM,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGtC,C,+CCFP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEV,EAAK,SAAEL,GAAU,EAC3C,MAAM,KAAEG,IAASD,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeZ,EAAKC,aAAaW,YACnDE,EAAgC,QAApB,EAAGd,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQY,EAAkBZ,EAAK,MAAMY,EAAiBZ,GACtD,wBAAMa,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASd,IACnC,wBAAMe,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAhB,EAAKC,oBAAY,aAAjB,EAAmBiB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASd,IACpC,wBAAMa,KAAK,sBAAsBC,QAASH,IACzChB,EAGP,C,6GCpCA,MA4BasB,EAAO,IAAM,gBAAC,IAAG,CAACjB,MAAM,cAErC,UA9BiB,IAAqB,IAApB,WAAEkB,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACEjB,MAAO,CAAEkB,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKJ,EAAWK,UAElB,yBAAG,kCAC+B,IAChC,qBAAGd,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,EAAAhB,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header class=\"flex flex-wrap flex-col items-center\">\r\n    <div class=\"flex flex-wrap justify-between\">\r\n        <div class=\"flex flex-wrap flex-col items-start mt-10 basis-10 md:basis-full\">\r\n            <h1 class=\"text-7xl tracking-tighter shrink\"><span class=\"font-bold\">THE</span> PHILOSOPHY CLUB</h1>\r\n            <h2 class=\"text-3xl md:self-end\">@UVA</h2>\r\n        </div >\r\n        <button id=\"hamburger-button\" class = \"text-6xl md:hidden cursor-pointer self-start mt-10 mr-2 -ml-24\">\r\n            &#9776;\r\n        </button>\r\n    </div>\r\n    <div>\r\n        <nav class=\"hidden md:block\"> \r\n            <ul class=\"mt-8\">\r\n                <li class=\"md:space-x-32 text-2xl\">\r\n                <Link class=\"hover:opacity-70\" to=\"/\">Home</Link>\r\n                <Link class=\"hover:opacity-70\" to=\"/events\">Events</Link>\r\n                <Link class=\"hover:opacity-70\" to=\"/archive\">Archive</Link> \r\n                <Link class=\"hover:opacity-70\" to=\"/contact\">Contact</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n  </header> \r\n)\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst UsingSSR = ({ serverData }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        This page is <b>rendered server-side</b>\r\n      </h1>\r\n      <p>\r\n        This page is rendered server side every time the page is requested.\r\n        Reload it to see a(nother) random photo from{\" \"}\r\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\r\n      </p>\r\n      <img\r\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\r\n        alt=\"A random dog\"\r\n        src={serverData.message}\r\n      />\r\n      <p>\r\n        To learn more, head over to our{\" \"}\r\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\r\n          documentation about Server Side Rendering\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Using SSR\" />\r\n\r\nexport default UsingSSR\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 500,\r\n      headers: {},\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["siteTitle","class","id","Link","to","children","data","useStaticQuery","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","href","description","metaDescription","defaultTitle","name","content","property","author","Head","serverData","width","borderRadius","alt","src","message"],"sourceRoot":""}