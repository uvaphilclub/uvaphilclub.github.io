{"version":3,"file":"component---src-pages-using-typescript-tsx-b6f447029ca1c299ae7b.js","mappings":"2NAaA,MAgCaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECbX,MA1Be,QAAC,UAAEC,GAAW,SAC3B,0BAAQC,MAAM,wCACZ,uBAAKA,MAAM,kCACP,uBAAKA,MAAM,oEACP,sBAAIA,MAAM,oCAAmC,wBAAMA,MAAM,aAAY,OAAU,oBAC/E,sBAAIA,MAAM,wBAAuB,SAErC,0BAAQC,GAAG,mBAAmBD,MAAQ,kEAAiE,MAI3G,2BACI,uBAAKA,MAAM,mBACP,sBAAIA,MAAM,QACN,sBAAIA,MAAM,0BACV,gBAAC,EAAAH,KAAI,CAACG,MAAM,mBAAmBF,GAAG,KAAI,QACtC,gBAAC,EAAAD,KAAI,CAACG,MAAM,mBAAmBF,GAAG,WAAU,UAC5C,gBAAC,EAAAD,KAAI,CAACG,MAAM,mBAAmBF,GAAG,YAAW,WAC7C,gBAAC,EAAAD,KAAI,CAACG,MAAM,mBAAmBF,GAAG,YAAW,eAKlD,ECwBX,MArCe,IAAmB,IAAD,MAAjB,SAAEI,GAAU,EAC1B,MAAMZ,GAAOa,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACJ,WAAiC,QAAtB,EAAAT,EAAKI,KAAKU,oBAAY,aAAtB,EAAwBhB,QAAK,UAChD,uBACEiB,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAON,GACP,0BACEG,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAGhB,KAAK,4BAA2B,YAGtC,C,+CCFP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEiB,EAAW,MAAEzB,EAAK,SAAEc,GAAU,EAC3C,MAAM,KAAER,IAASS,EAAAA,EAAAA,gBAAe,YAc1BW,EAAkBD,GAAenB,EAAKU,aAAaS,YACnDE,EAAgC,QAApB,EAAGrB,EAAKU,oBAAY,aAAjB,EAAmBhB,MAExC,OACE,gCACE,6BAAQ2B,EAAkB3B,EAAK,MAAM2B,EAAiB3B,GACtD,wBAAM4B,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAAS7B,IACnC,wBAAM8B,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAvB,EAAKU,oBAAY,aAAjB,EAAmBe,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAAS7B,IACpC,wBAAM4B,KAAK,sBAAsBC,QAASH,IACzCZ,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header class=\"flex flex-wrap flex-col items-center\">\r\n    <div class=\"flex flex-wrap justify-between\">\r\n        <div class=\"flex flex-wrap flex-col items-start mt-10 basis-10 md:basis-full\">\r\n            <h1 class=\"text-7xl tracking-tighter shrink\"><span class=\"font-bold\">THE</span> PHILOSOPHY CLUB</h1>\r\n            <h2 class=\"text-3xl md:self-end\">@UVA</h2>\r\n        </div >\r\n        <button id=\"hamburger-button\" class = \"text-6xl md:hidden cursor-pointer self-start mt-10 mr-2 -ml-24\">\r\n            &#9776;\r\n        </button>\r\n    </div>\r\n    <div>\r\n        <nav class=\"hidden md:block\"> \r\n            <ul class=\"mt-8\">\r\n                <li class=\"md:space-x-32 text-2xl\">\r\n                <Link class=\"hover:opacity-70\" to=\"/\">Home</Link>\r\n                <Link class=\"hover:opacity-70\" to=\"/events\">Events</Link>\r\n                <Link class=\"hover:opacity-70\" to=\"/archive\">Archive</Link> \r\n                <Link class=\"hover:opacity-70\" to=\"/contact\">Contact</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n  </header> \r\n)\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","class","id","children","useStaticQuery","siteMetadata","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}